// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20251011145421_Report")]
    partial class Report
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.AccessControl.Feature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.ToTable("Features", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 10, 11, 14, 54, 20, 548, DateTimeKind.Utc).AddTicks(2896),
                            IsActive = true,
                            IsDeleted = false,
                            Key = "role.read",
                            Name = "عرض الأدوار",
                            UpdatedDate = new DateTime(2025, 10, 11, 14, 54, 20, 548, DateTimeKind.Utc).AddTicks(2896)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 10, 11, 14, 54, 20, 548, DateTimeKind.Utc).AddTicks(2896),
                            IsActive = true,
                            IsDeleted = false,
                            Key = "role.create",
                            Name = "إنشاء دور",
                            UpdatedDate = new DateTime(2025, 10, 11, 14, 54, 20, 548, DateTimeKind.Utc).AddTicks(2896)
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 10, 11, 14, 54, 20, 548, DateTimeKind.Utc).AddTicks(2896),
                            IsActive = true,
                            IsDeleted = false,
                            Key = "role.update",
                            Name = "تعديل دور",
                            UpdatedDate = new DateTime(2025, 10, 11, 14, 54, 20, 548, DateTimeKind.Utc).AddTicks(2896)
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2025, 10, 11, 14, 54, 20, 548, DateTimeKind.Utc).AddTicks(2896),
                            IsActive = true,
                            IsDeleted = false,
                            Key = "role.delete",
                            Name = "حذف دور",
                            UpdatedDate = new DateTime(2025, 10, 11, 14, 54, 20, 548, DateTimeKind.Utc).AddTicks(2896)
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2025, 10, 11, 14, 54, 20, 548, DateTimeKind.Utc).AddTicks(2896),
                            IsActive = true,
                            IsDeleted = false,
                            Key = "role.assignFeatures",
                            Name = "تعيين الصلاحيات",
                            UpdatedDate = new DateTime(2025, 10, 11, 14, 54, 20, 548, DateTimeKind.Utc).AddTicks(2896)
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2025, 10, 11, 14, 54, 20, 548, DateTimeKind.Utc).AddTicks(2896),
                            IsActive = true,
                            IsDeleted = false,
                            Key = "feature.read",
                            Name = "عرض الصلاحيات",
                            UpdatedDate = new DateTime(2025, 10, 11, 14, 54, 20, 548, DateTimeKind.Utc).AddTicks(2896)
                        },
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(2025, 10, 11, 14, 54, 20, 548, DateTimeKind.Utc).AddTicks(2896),
                            IsActive = true,
                            IsDeleted = false,
                            Key = "staff.read",
                            Name = "عرض الموظفين",
                            UpdatedDate = new DateTime(2025, 10, 11, 14, 54, 20, 548, DateTimeKind.Utc).AddTicks(2896)
                        },
                        new
                        {
                            Id = 21,
                            CreatedDate = new DateTime(2025, 10, 11, 14, 54, 20, 548, DateTimeKind.Utc).AddTicks(2896),
                            IsActive = true,
                            IsDeleted = false,
                            Key = "staff.create",
                            Name = "إنشاء موظف",
                            UpdatedDate = new DateTime(2025, 10, 11, 14, 54, 20, 548, DateTimeKind.Utc).AddTicks(2896)
                        },
                        new
                        {
                            Id = 22,
                            CreatedDate = new DateTime(2025, 10, 11, 14, 54, 20, 548, DateTimeKind.Utc).AddTicks(2896),
                            IsActive = true,
                            IsDeleted = false,
                            Key = "staff.update",
                            Name = "تعديل موظف",
                            UpdatedDate = new DateTime(2025, 10, 11, 14, 54, 20, 548, DateTimeKind.Utc).AddTicks(2896)
                        },
                        new
                        {
                            Id = 23,
                            CreatedDate = new DateTime(2025, 10, 11, 14, 54, 20, 548, DateTimeKind.Utc).AddTicks(2896),
                            IsActive = true,
                            IsDeleted = false,
                            Key = "staff.delete",
                            Name = "حذف موظف",
                            UpdatedDate = new DateTime(2025, 10, 11, 14, 54, 20, 548, DateTimeKind.Utc).AddTicks(2896)
                        });
                });

            modelBuilder.Entity("Domain.Models.AccessControl.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 10, 11, 14, 54, 20, 548, DateTimeKind.Utc).AddTicks(2896),
                            Description = "النظام/كل الصلاحيات",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Admin",
                            UpdatedDate = new DateTime(2025, 10, 11, 14, 54, 20, 548, DateTimeKind.Utc).AddTicks(2896)
                        });
                });

            modelBuilder.Entity("Domain.Models.AccessControl.RoleFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FeatureId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FeatureId");

                    b.HasIndex("RoleId", "FeatureId")
                        .IsUnique();

                    b.ToTable("RoleFeatures", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1001,
                            CreatedDate = new DateTime(2025, 10, 11, 14, 54, 20, 548, DateTimeKind.Utc).AddTicks(2896),
                            FeatureId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            RoleId = 1,
                            UpdatedDate = new DateTime(2025, 10, 11, 14, 54, 20, 548, DateTimeKind.Utc).AddTicks(2896)
                        },
                        new
                        {
                            Id = 1002,
                            CreatedDate = new DateTime(2025, 10, 11, 14, 54, 20, 548, DateTimeKind.Utc).AddTicks(2896),
                            FeatureId = 2,
                            IsActive = true,
                            IsDeleted = false,
                            RoleId = 1,
                            UpdatedDate = new DateTime(2025, 10, 11, 14, 54, 20, 548, DateTimeKind.Utc).AddTicks(2896)
                        },
                        new
                        {
                            Id = 1003,
                            CreatedDate = new DateTime(2025, 10, 11, 14, 54, 20, 548, DateTimeKind.Utc).AddTicks(2896),
                            FeatureId = 3,
                            IsActive = true,
                            IsDeleted = false,
                            RoleId = 1,
                            UpdatedDate = new DateTime(2025, 10, 11, 14, 54, 20, 548, DateTimeKind.Utc).AddTicks(2896)
                        },
                        new
                        {
                            Id = 1004,
                            CreatedDate = new DateTime(2025, 10, 11, 14, 54, 20, 548, DateTimeKind.Utc).AddTicks(2896),
                            FeatureId = 4,
                            IsActive = true,
                            IsDeleted = false,
                            RoleId = 1,
                            UpdatedDate = new DateTime(2025, 10, 11, 14, 54, 20, 548, DateTimeKind.Utc).AddTicks(2896)
                        },
                        new
                        {
                            Id = 1005,
                            CreatedDate = new DateTime(2025, 10, 11, 14, 54, 20, 548, DateTimeKind.Utc).AddTicks(2896),
                            FeatureId = 5,
                            IsActive = true,
                            IsDeleted = false,
                            RoleId = 1,
                            UpdatedDate = new DateTime(2025, 10, 11, 14, 54, 20, 548, DateTimeKind.Utc).AddTicks(2896)
                        },
                        new
                        {
                            Id = 1010,
                            CreatedDate = new DateTime(2025, 10, 11, 14, 54, 20, 548, DateTimeKind.Utc).AddTicks(2896),
                            FeatureId = 10,
                            IsActive = true,
                            IsDeleted = false,
                            RoleId = 1,
                            UpdatedDate = new DateTime(2025, 10, 11, 14, 54, 20, 548, DateTimeKind.Utc).AddTicks(2896)
                        },
                        new
                        {
                            Id = 1020,
                            CreatedDate = new DateTime(2025, 10, 11, 14, 54, 20, 548, DateTimeKind.Utc).AddTicks(2896),
                            FeatureId = 20,
                            IsActive = true,
                            IsDeleted = false,
                            RoleId = 1,
                            UpdatedDate = new DateTime(2025, 10, 11, 14, 54, 20, 548, DateTimeKind.Utc).AddTicks(2896)
                        },
                        new
                        {
                            Id = 1021,
                            CreatedDate = new DateTime(2025, 10, 11, 14, 54, 20, 548, DateTimeKind.Utc).AddTicks(2896),
                            FeatureId = 21,
                            IsActive = true,
                            IsDeleted = false,
                            RoleId = 1,
                            UpdatedDate = new DateTime(2025, 10, 11, 14, 54, 20, 548, DateTimeKind.Utc).AddTicks(2896)
                        },
                        new
                        {
                            Id = 1022,
                            CreatedDate = new DateTime(2025, 10, 11, 14, 54, 20, 548, DateTimeKind.Utc).AddTicks(2896),
                            FeatureId = 22,
                            IsActive = true,
                            IsDeleted = false,
                            RoleId = 1,
                            UpdatedDate = new DateTime(2025, 10, 11, 14, 54, 20, 548, DateTimeKind.Utc).AddTicks(2896)
                        },
                        new
                        {
                            Id = 1023,
                            CreatedDate = new DateTime(2025, 10, 11, 14, 54, 20, 548, DateTimeKind.Utc).AddTicks(2896),
                            FeatureId = 23,
                            IsActive = true,
                            IsDeleted = false,
                            RoleId = 1,
                            UpdatedDate = new DateTime(2025, 10, 11, 14, 54, 20, 548, DateTimeKind.Utc).AddTicks(2896)
                        });
                });

            modelBuilder.Entity("Domain.Models.Reservation.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CheckIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOut")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("RoomId", "CheckIn");

                    b.HasIndex("RoomId", "CheckOut");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("Domain.Models.Room.Facility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Facilities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Wi-Fi"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Air Conditioning"
                        },
                        new
                        {
                            Id = 3,
                            Name = "TV"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Private Bathroom"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Work Desk"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Private Balcony"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Jacuzzi"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Hair Dryer"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Electric Kettle"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Daily Housekeeping"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Sea View"
                        });
                });

            modelBuilder.Entity("Domain.Models.Room.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<decimal>("PricePerNight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Domain.Models.Room.RoomFacility", b =>
                {
                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<int>("FacilityId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RoomId", "FacilityId");

                    b.HasIndex("FacilityId");

                    b.ToTable("RoomFacilities");
                });

            modelBuilder.Entity("Domain.Models.Room.RoomPicture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomPictures");
                });

            modelBuilder.Entity("Domain.Models.Users.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Domain.Models.Users.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("Domain.Models.AccessControl.RoleFeature", b =>
                {
                    b.HasOne("Domain.Models.AccessControl.Feature", "Feature")
                        .WithMany("RoleFeatures")
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.AccessControl.Role", "Role")
                        .WithMany("RoleFeatures")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feature");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Domain.Models.Reservation.Reservation", b =>
                {
                    b.HasOne("Domain.Models.Users.Customer", "Customer")
                        .WithMany("Reservations")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Room.Room", "Room")
                        .WithMany("Reservations")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Domain.Models.Room.RoomFacility", b =>
                {
                    b.HasOne("Domain.Models.Room.Facility", "Facility")
                        .WithMany("RoomFacilities")
                        .HasForeignKey("FacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Room.Room", "Room")
                        .WithMany("RoomFacilities")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facility");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Domain.Models.Room.RoomPicture", b =>
                {
                    b.HasOne("Domain.Models.Room.Room", "Room")
                        .WithMany("Pictures")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Domain.Models.Users.Staff", b =>
                {
                    b.HasOne("Domain.Models.AccessControl.Role", "Role")
                        .WithMany("StaffMembers")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Domain.Models.AccessControl.Feature", b =>
                {
                    b.Navigation("RoleFeatures");
                });

            modelBuilder.Entity("Domain.Models.AccessControl.Role", b =>
                {
                    b.Navigation("RoleFeatures");

                    b.Navigation("StaffMembers");
                });

            modelBuilder.Entity("Domain.Models.Room.Facility", b =>
                {
                    b.Navigation("RoomFacilities");
                });

            modelBuilder.Entity("Domain.Models.Room.Room", b =>
                {
                    b.Navigation("Pictures");

                    b.Navigation("Reservations");

                    b.Navigation("RoomFacilities");
                });

            modelBuilder.Entity("Domain.Models.Users.Customer", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
